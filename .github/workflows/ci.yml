name: Pr√©paration de l'environnement back-end

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Install dependencies
      run: pnpm install
    
    - name: Run tests
      run: pnpm test -- --no-watch --browsers=ChromeHeadless

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only run on main branch
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and test Docker configuration
        run: |
          docker build -t app-backend .
          docker run -d -p 3000:3000 --name test-container app-backend
          sleep 10
          curl -f http://localhost:3000 || exit 1
          docker stop test-container
  
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Deploy to VPS
      uses: appleboy/ssh-action@master
      with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.VPS_PORT }}
          username: ${{ secrets.VPS_USERNAME }}
          script: |
            # Create temp directory for build
            TEMP_DIR=$(mktemp -d)
            cd $TEMP_DIR
            
            # Copy necessary files from repository
            scp -r $GITHUB_WORKSPACE/* .
            
            # Build the image
            docker build -t app-backend .
            
            # Stop and remove existing container if it exists
            docker stop app-backend || true
            docker rm app-backend || true
            
            # Run new container
            docker run -d --name app-backend -p 3000:3000 app-backend
            
            # Cleanup
            cd /
            rm -rf $TEMP_DIR